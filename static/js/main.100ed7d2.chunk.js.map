{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","task","setTask","id","type","placeholder","required","maxLength","noValidate","value","onChange","e","target","onKeyUp","key","document","getElementById","click","onClick","li","createElement","innerHTML","appendChild","className","autoFocus","listItems","querySelectorAll","i","length","classList","contains","parentElement","style","display","checked","deleteItem","tasks","onclick","this","textDecoration","color","remove","add","removeChild","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.100ed7d2.chunk.js","sourcesContent":["import './App.css';\nimport React, {useState} from \"react\";\n\nconst App = () => {\n\n    // State for task\n    const [task, setTask] = useState(\"\");\n\n    const addTask = () => {\n        let li = document.createElement('li');\n        li.innerHTML = `<label><input type='checkbox' class='check todo'>&nbsp;&nbsp;<span class=\"tasks\">${task}</span>  </label> <span class='delete'>X</span>`;\n        if (task !== \"\") {\n            document.getElementById('list').appendChild(li);\n            setTask(\"\");\n        }\n    }\n\n    const listHandler = () => {\n        let checked = document.querySelectorAll('.check');\n        let deleteItem = document.querySelectorAll('.delete');\n        let tasks = document.querySelectorAll(\".tasks\");\n\n        for (let i = 0; i < checked.length; i++) {\n            checked[i].onclick = function() {\n                if (this.checked === true) {\n                    tasks[i].style.textDecoration = 'line-through';\n                    this.parentElement.style.color = '#606368';\n                    this.classList.remove('todo');\n                    this.classList.add('completed');\n                } else {\n                    tasks[i].style.textDecoration = 'none';\n                    this.parentElement.style.color = '#A1A1A1';\n                    this.classList.remove('completed');\n                    this.classList.add('todo');\n                }\n            }\n        }\n\n        for (let i = 0; i < deleteItem.length; i++) {\n            deleteItem[i].onclick = function() {\n              this.parentElement.parentElement.removeChild(this.parentElement);\n            }\n          }\n    }\n\n    const displayAll = () => {\n        let listItems = document.querySelectorAll('.check');\n\n        for (var i = 0; i < listItems.length; i++) {\n            if (listItems[i].classList.contains('todo') || listItems[i].classList.contains('completed')) {\n                listItems[i].parentElement.parentElement.style.display = 'block';\n            }\n        }\n    }\n\n    const displayTodo = () => {\n        let listItems = document.querySelectorAll('.check');\n\n        for (var i = 0; i < listItems.length; i++) {\n            if (listItems[i].classList.contains('todo')) {\n                listItems[i].parentElement.parentElement.style.display = 'block';\n            } else {\n                listItems[i].parentElement.parentElement.style.display = 'none';\n            }\n        }\n    }\n\n    const displayCompleted = () => {\n        let listItems = document.querySelectorAll('.check');\n\n        for (var i = 0; i < listItems.length; i++) {\n            if (listItems[i].classList.contains('completed')) {\n                listItems[i].parentElement.parentElement.style.display = 'block';\n            } else {\n                listItems[i].parentElement.parentElement.style.display = 'none';\n            }\n        }\n    }\n\n    const handleSubmit = (e) => {\n        if (e.key === \"Enter\") {\n            document.getElementById(\"add\").click();\n        }\n    }\n\n\n    return (\n        <div id=\"content\">\n\n        <h1 id=\"title\">Rumble - To do list</h1>\n        <div id=\"box\">\n\n            <div id=\"task\">\n                <input type=\"text\" placeholder=\"Add a task...\" id=\"question\" required maxLength=\"50\" noValidate value={task} onChange={(e) => {setTask(e.target.value)}} onKeyUp={handleSubmit} />\n                <button id=\"add\" onClick={addTask}>+</button>\n            </div>\n\n            <div id=\"category\">\n\n                <button id=\"all\" className=\"hover\" autoFocus={true} onClick={displayAll}> All</button>\n\n                <button id=\"todo\" className=\"hover\" onClick={displayTodo}>To-do </button>\n\n                <button id=\"completed\" className=\"hover\" onClick={displayCompleted}>Completed</button>\n\n            </div>\n\n\n\n            <ul id=\"list\" onClick={listHandler}>\n\n            </ul>\n\n        </div>\n\n    </div>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}